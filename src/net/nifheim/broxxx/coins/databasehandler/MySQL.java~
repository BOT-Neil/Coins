package net.nifheim.broxxx.coins.databasehandler;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import net.nifheim.broxxx.coins.Main;

import org.bukkit.Bukkit;
import org.bukkit.command.ConsoleCommandSender;
import org.bukkit.configuration.file.FileConfiguration;

public class MySQL {

    static FileConfiguration config = Main.getInstance().getConfig();
    final ConsoleCommandSender console = Bukkit.getConsoleSender();
    private Main plugin;

    private final String host = config.getString("MySQL.Host");
    private final int port = config.getInt("MySQL.Port");
    private final String name = config.getString("MySQL.Database");
    private final String user = config.getString("MySQL.User");
    private final String passwd = config.getString("MySQL.Password");
    private final int checkdb = config.getInt("Connection Interval") * 1200;
    private Connection c;
    private MySQL mysql;

    public Connection getConnection() {
        return c;
    }

    public void SQLConnection() {
        try {
            Connect();

            if (!getConnection().isClosed()) {
                console.sendMessage(plugin.replacener("%prefix%Plugin conected sucesful to the MySQL."));
            }
        } catch (Exception e) {
            console.sendMessage(plugin.replacener("%prefix%Can't connect to the database, disabling plugin..."));
            Bukkit.getServer().getPluginManager().disablePlugin(Main.getInstance());
        }

        Bukkit.getServer().getScheduler().scheduleAsyncRepeatingTask(Main.getInstance(), new Runnable() {
            @Override
            public void run() {
                console.sendMessage(plugin.replacener("%prefix%Checking the database connection ..."));
                if (getConnection() == null) {
                    console.sendMessage(plugin.replacener("%prefix%The database connection is null, reconnecting ..."));
                    mysql.Reconnect();
                } else {
                    console.sendMessage(plugin.replacener("%prefix%The connection to the database is still active."));
                }
            }
        }, 0L, checkdb);
    }

    public void Connect() throws SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {
        }
        c = DriverManager.getConnection("jdbc:mysql://" + host + ":" + port + "/" + name, user, passwd);
        String updatesql
                = "CREATE TABLE IF NOT EXISTS `Coins` ("
                + "`player` VARCHAR(50) NOT NULL,"
                + "`balance` INTEGER NOT NULL,"
                + "PRIMARY KEY (`player`)"
                + ")";

        Statement update = c.createStatement();
        update.execute(updatesql);
    }

    public void Reconnect() {
        Disconnect();

        Bukkit.getServer().getScheduler().scheduleAsyncDelayedTask(Main.getInstance(), new Runnable() {
            @Override
            public void run() {
                try {
                    Connect();
                } catch (SQLException ex) {
                }
            }
        }, 20L);
    }

    public void Disconnect() {
        try {
            if (c != null) {
                c.close();
            }
        } catch (SQLException e) {
        }
    }
}
